import os
import json
import configparser

from cvebot.Logger import Logger


class Configuration:

    def __init__(self):

        self.config_location = str(
            os.path.join(
                str(os.getcwd()),
                'config',
                'app.conf'
                ))
        
        self.conf = {
            'discourse': {
                'url': '',
                'username': '',
                'token': '',
                'category': ''
            },
            'bot': {
                'run-time': '',
                'day-interval': 1
            }
        }

    def dump(self, verbose=False, indent=2):
        if verbose:
            print(json.dumps(self.conf, indent=indent))
        return self.conf

    def load(self, auto_dump=False, verbose=False):
        log = Logger()
        config = configparser.ConfigParser()

        if not os.path.isfile(self.config_location):
            log.commit(f'Configuration file: {self.config_location} not found!', 'runtime')
            exit()
        
        try:
            config.read(self.config_location)

            # load configuration from authentication section
            section = 'auth'.upper()
            if section in config.sections():

                self.conf['discourse']['url']= config[section]['discourse_url']
                self.conf['discourse']['username'] = config[section]['discourse_bot_user']
                self.conf['discourse']['token'] = config[section]['discourse_api_token']
                self.conf['discourse']['category'] = config[section]['post_category_name']
            else:
                err_msg = f'Failed to find section {section} in configuration!'
                
                log.commit(err_msg, 'runtime')
                if verbose:
                    print(err_msg)
                
                exit()
            
            # load bot timer configuration from timer section
            section = 'timer'.upper()
            if section in config.sections():

                self.conf['bot']['run-time']= config[section]['time_to_run']
                self.conf['bot']['day-interval'] = config[section]['day_interval']
            else:
                err_msg = f'Failed to find section {section} in configuration!'

                log.commit(err_msg, 'runtime')
                if verbose:
                    print(err_msg)

                exit()
        except Exception as e:
            err_msg = str(e)
            log.commit(err_msg, 'runtime')
            if verbose:
                print(err_msg)
            
            exit()
        
        if auto_dump:
            return self.dump(verbose=verbose)
