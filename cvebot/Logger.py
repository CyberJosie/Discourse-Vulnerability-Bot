import os
from datetime import datetime

class Logger:

    def __init__(self):
        self.valid_locations = {
            "runtime": f"{os.getcwd()}/logs/runtime.log"
        }
    
    def timestamp(self):
        now = datetime.now()
        return str(now.strftime('%m-%d-%Y %H:%M:%S'))

    def commit(self, log_content, log_location_id, overwrite=False):

        if log_location_id not in list(self.valid_locations.keys()):
            print(f'{log_location_id} is not a valid log location.')
            return False

        log_path = self.valid_locations[log_location_id]

        try:
            if overwrite:
                # overwrite mode
                f = open(log_path, 'w')
            else:
                # append
                f = open(log_path, 'a')
            
            f.write(f'[{self.timestamp()}] {log_content}\n')
            f.close()

            return True
        except Exception as e:
            print(f'Error while writing to {log_path}\n{str(e)}')
            return False
